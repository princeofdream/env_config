From 8d51945295aad65a54673dc2a9d1a9deaefc571e Mon Sep 17 00:00:00 2001
From: James <howpigcanfly@outlook.com>
Date: Sun, 6 Aug 2017 19:37:59 +0800
Subject: [PATCH 1/3] [powerline-shell] Add segments

---
 segments/android_prj.py     | 28 ++++++++++++++++++++++++++++
 segments/get_android_prj.sh | 14 ++++++++++++++
 segments/get_git_branch.sh  | 12 ++++++++++++
 segments/get_git_info.sh    | 14 ++++++++++++++
 segments/git_branch.py      | 24 ++++++++++++++++++++++++
 segments/git_ext.py         | 21 +++++++++++++++++++++
 segments/idle.py            | 14 ++++++++++++++
 segments/info.sh            |  4 ++++
 8 files changed, 131 insertions(+)
 create mode 100644 segments/android_prj.py
 create mode 100644 segments/get_android_prj.sh
 create mode 100755 segments/get_git_branch.sh
 create mode 100644 segments/get_git_info.sh
 create mode 100644 segments/git_branch.py
 create mode 100644 segments/git_ext.py
 create mode 100644 segments/idle.py
 create mode 100644 segments/info.sh

diff --git a/segments/android_prj.py b/segments/android_prj.py
new file mode 100644
index 0000000..1f9c53d
--- /dev/null
+++ b/segments/android_prj.py
@@ -0,0 +1,28 @@
+
+import os
+import subprocess
+import string
+import sys
+
+def add_android_prj_segment(powerline):
+	get_info = subprocess.Popen(["/home/$WHOAMI/.exvim/bundle/powerline-shell/segments/get_android_prj.sh",""], stdout=subprocess.PIPE)
+	branch = get_info.stdout.read()
+	#  g_st = string.find(branch,"*")
+
+        #  get_tmp=subprocess.Popen('/home/$WHOAMI/1.sh',stdout=subprocess.PIPE,shell=True)
+        #  print(get_tmp.stdout.readlines())
+        #  out,err = p.communicate()
+        #  print out
+        #  print err
+
+
+	fg = Color.REPO_CLEAN_FG
+	bg = Color.REPO_CLEAN_BG
+	#  if g_st >= 0:
+	#          ## can not find * in branch
+	#          fg = Color.REPO_DIRTY_FG
+	#          bg = Color.REPO_DIRTY_BG
+	s_len = len(branch)
+	if s_len > 0:
+		powerline.append(' %s ' % branch, fg, bg)
+
diff --git a/segments/get_android_prj.sh b/segments/get_android_prj.sh
new file mode 100644
index 0000000..3c4380c
--- /dev/null
+++ b/segments/get_android_prj.sh
@@ -0,0 +1,14 @@
+#!/usr/bin/env bash
+
+
+get_pwd=$(pwd)
+
+# echo "get produce: $TARGET_PRODUCT"
+
+if [ "$TARGET_PRODUCT" != "" ]
+then
+	echo -n "$TARGET_PRODUCT-$TARGET_BUILD_VARIANT"
+	# source ~/.exvim/bundle/powerline-shell/segments/android_info.sh
+fi
+
+
diff --git a/segments/get_git_branch.sh b/segments/get_git_branch.sh
new file mode 100755
index 0000000..e4274a0
--- /dev/null
+++ b/segments/get_git_branch.sh
@@ -0,0 +1,12 @@
+#!/usr/bin/env bash
+
+# get_branch=`git branch 2>/dev/null`
+get_branch=`git branch 2>/dev/null |grep '\*'`
+
+branch=${get_branch:2}
+
+if [ "$branch" != "" ]
+then
+	echo -n "($branch)"
+fi
+
diff --git a/segments/get_git_info.sh b/segments/get_git_info.sh
new file mode 100644
index 0000000..c30cb27
--- /dev/null
+++ b/segments/get_git_info.sh
@@ -0,0 +1,14 @@
+#!/usr/bin/env bash
+
+if [ -f "/etc/bash_completion.d/git-prompt" ]
+then
+	source /etc/bash_completion.d/git-prompt
+	source ~/.exvim/bundle/powerline-shell/segments/info.sh
+else
+	if [ -f "/etc/bash_completion.d/git" ]
+	then
+		source /etc/bash_completion.d/git
+		source /usr/share/git-core/contrib/completion/git-prompt.sh
+		source ~/.exvim/bundle/powerline-shell/segments/info.sh
+	fi
+fi
diff --git a/segments/git_branch.py b/segments/git_branch.py
new file mode 100644
index 0000000..f202c9e
--- /dev/null
+++ b/segments/git_branch.py
@@ -0,0 +1,24 @@
+
+import os
+import subprocess
+import string
+import sys
+
+def add_git_branch_segment(powerline):
+    get_info = subprocess.Popen(["/home/$WHOAMI/.exvim/bundle/powerline-shell/segments/get_git_branch.sh",""], stdout=subprocess.PIPE)
+    branch = get_info.stdout.read()
+    #  branch = ""
+    #  g_st = string.find(branch,"*")
+    #  fg = Color.REPO_CLEAN_FG
+    #  bg = Color.REPO_CLEAN_BG
+    #  if g_st >= 0:
+    #      ## can not find * in branch
+    #      fg = Color.REPO_DIRTY_FG
+    #      bg = Color.REPO_DIRTY_BG
+    fg = Color.REPO_DIRTY_FG
+    bg = Color.REPO_DIRTY_BG
+    s_len = len(branch)
+    s1 = unicode(branch, 'utf-8')
+    if s_len > 0:
+        powerline.append(' %s ' % s1, fg, bg)
+
diff --git a/segments/git_ext.py b/segments/git_ext.py
new file mode 100644
index 0000000..e71df00
--- /dev/null
+++ b/segments/git_ext.py
@@ -0,0 +1,21 @@
+
+import os
+import subprocess
+import string
+import sys
+
+def add_git_ext_segment(powerline):
+        get_info = subprocess.Popen(["/home/$WHOAMI/.exvim/bundle/powerline-shell/segments/get_git_info.sh",""], stdout=subprocess.PIPE)
+        branch = get_info.stdout.read()
+        #  branch = ""
+	g_st = string.find(branch,"*")
+	fg = Color.REPO_CLEAN_FG
+	bg = Color.REPO_CLEAN_BG
+	if g_st >= 0:
+		## can not find * in branch
+		fg = Color.REPO_DIRTY_FG
+		bg = Color.REPO_DIRTY_BG
+	s_len = len(branch)
+	if s_len > 0:
+		powerline.append(' %s ' % branch, fg, bg)
+
diff --git a/segments/idle.py b/segments/idle.py
new file mode 100644
index 0000000..ca3d693
--- /dev/null
+++ b/segments/idle.py
@@ -0,0 +1,14 @@
+def add_idle_segment(powerline):
+    #  idle_indicators = {
+        #  'bash': '\n ',
+        #  'zsh': ' \n ',
+        #  'bare': ' \n ',
+    #  }
+    #  fg = Color.CMD_LINE_FG
+    #  bg = Color.CMD_LINE_BG
+    fg = Color.IDLE_FG
+    bg = Color.IDLE_BG
+    if powerline.args.prev_error != 0:
+        fg = Color.CMD_FAILED_FG
+        bg = Color.CMD_FAILED_BG
+    powerline.append("", fg, bg)
diff --git a/segments/info.sh b/segments/info.sh
new file mode 100644
index 0000000..2091b6a
--- /dev/null
+++ b/segments/info.sh
@@ -0,0 +1,4 @@
+#!/usr/bin/env bash
+__git_ps1
+
+
-- 
1.8.3.1

