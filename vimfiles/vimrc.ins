
set nocompatible " be iMproved, required
filetype off " required

let cwd = getcwd()

" Specify a directory for plugins
" - For Neovim: ~/.local/share/nvim/plugged
" - Avoid using standard Vim directory names like 'plugin'
call plug#begin(cwd."/vimfiles/base")

" Make sure you use single quotes

Plug 'junegunn/vim-plug'

" Shorthand notation; fetches https://github.com/junegunn/vim-easy-align
Plug 'junegunn/vim-easy-align'

" Any valid git URL is allowed
Plug 'https://github.com/junegunn/vim-github-dashboard.git'

" Multiple Plug commands can be written in a single line using | separators
" Plug 'SirVer/UltiSnips' | Plug 'honza/vim-snippets'

" On-demand loading
" Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle', 'tag':'5.0.0' }
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle', 'tag' : '*' }
" Plug 'tpope/vim-fireplace', { 'for': 'clojure' }

" Using a non-master branch
" Plug 'rdnetto/YCM-Generator', { 'branch': 'stable' }

" Using a tagged release; wildcard allowed (requires git 1.9.2 or above)
" Plug 'fatih/vim-go', { 'tag': 'v1.18' }
Plug 'fatih/vim-go', {'tag' : '*'}

" Plugin options
" Plug 'nsf/gocode', { 'tag': 'v.20150303', 'rtp': 'vim' }
Plug 'nsf/gocode', { 'rtp': 'vim'}

" Plugin outside ~/.vim/plugged with post-update hook
let g:fzf_install = 'yes | ./install'
Plug 'junegunn/fzf', { 'do': g:fzf_install }
" Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

" Unmanaged plugin (manually installed and updated)
Plug '~/vimrc/prototype-plugin'






" =======================================================
""""" Vim Package Manager
" Plug 'VundleVim/Vundle.vim'
" Plug 'junegunn/vim-plug'


" "----------------------------------------------------------------------- "
" "--- Basic library"
" "----------------------------------------------------------------------- "
Plug 'inkarkat/vim-ingo-library'
Plug 'vim-scripts/LargeFile'


" "----------------------------------------------------------------------- "
" "--- Search"
" "----------------------------------------------------------------------- "
Plug 'asenac/vim-opengrok'
Plug 'easymotion/vim-easymotion'
Plug 'dyng/ctrlsf.vim'
" "vim plugin
Plug 'mileszs/ack.vim'
" "command
Plug 'beyondgrep/ack2'
" "command
Plug 'ggreer/the_silver_searcher'


" "----------------------------------------------------------------------- "
" "--- Buffer and files"
" "----------------------------------------------------------------------- "
Plug 'ctrlpvim/ctrlp.vim'
Plug 'tacahiroy/ctrlp-funky'
Plug 'Yggdroot/LeaderF', { 'do': './install.sh' }
" Plug 'scrooloose/nerdtree'
Plug 'jlanzarotta/bufexplorer'
Plug 'jeetsukumaran/vim-buffergator'
Plug 'fholgado/minibufexpl.vim'
Plug 'bling/vim-bufferline'
Plug 'majutsushi/tagbar'
Plug 'NLKNguyen/easy-navigate.vim'
Plug 's3rvac/AutoFenc'
" Plug 'mbbill/fencview'


" "----------------------------------------------------------------------- "
" "--- Align"
" "----------------------------------------------------------------------- "
"""" tabular must comes before markdown
Plug 'godlygeek/tabular'
Plug 'plasticboy/vim-markdown'
" if you don't have nodejs and yarn
" use pre build
Plug 'iamcco/markdown-preview.nvim', { 'do': { -> mkdp#util#install() }}
" have nodejs and yarn
" Plug 'iamcco/markdown-preview.nvim', { 'do': 'cd app & yarn install'  }


" "----------------------------------------------------------------------- "
" "--- undo"
" "----------------------------------------------------------------------- "
Plug 'mbbill/undotree'
Plug 'sjl/gundo.vim'

" "----------------------------------------------------------------------- "
" "--- auto complete"
" "----------------------------------------------------------------------- "
function! BuildYCM(info)
  " info is a dictionary with 3 fields
  " - name:   name of the plugin
  " - status: 'installed', 'updated', or 'unchanged'
  " - force:  set on PlugInstall! or PlugUpdate!
  if a:info.status == 'installed' || a:info.force
    !./install.py
  endif
endfunction

Plug 'Valloric/YouCompleteMe', { 'do': function('BuildYCM') }
Plug 'xavierd/clang_complete'
Plug 'artur-shaik/vim-javacomplete2'
" Plug 'SirVer/UltiSnips' , {'tag': '3.1'}
Plug 'SirVer/UltiSnips' , {'tag': '*'}
Plug 'honza/vim-snippets'
Plug 'tenfyzhong/CompleteParameter.vim'
Plug 'rdnetto/YCM-Generator', { 'branch': 'stable'}
" Plug 'Shougo/neocomplete.vim'
Plug 'Shougo/deoplete.nvim'
Plug 'zchee/deoplete-clang'
" Plug 'fatih/vim-go'
Plug 'deoplete-plugins/deoplete-jedi'
Plug 'sebastianmarkow/deoplete-rust'
Plug 'carlitux/deoplete-ternjs'
Plug 'mhartington/nvim-typescript'
Plug 'johnzeng/vim-erlang-omnicomplete'

Plug 'msanders/snipmate.vim'
Plug 'MarcWeber/vim-addon-mw-utils'
Plug 'tomtom/tlib_vim'
Plug 'garbas/vim-snipmate'
"""""
" Plug 'spf13/snipmate-snippets'

"" automatic closing of quotes, parenthesis, brackets, etc.
Plug 'Raimondi/delimitMate'
Plug 'Shougo/echodoc.vim'


" "----------------------------------------------------------------------- "
" "--- colorschemes"
" "----------------------------------------------------------------------- "
" Plug 'itchyny/lightline.vim'
Plug 'princeofdream/lightline.vim'
Plug 'rakr/vim-one'
Plug 'sonph/onehalf'
Plug 'joshdick/onedark.vim'
Plug 'princeofdream/gruvcase'
Plug 'upsuper/vim-colorschemes'
Plug 'morhetz/gruvbox'
" Plug 'jeaye/color_coded'
Plug 'nathanaelkane/vim-indent-guides' "Display tab and space in front of a line
Plug 'Yggdroot/indentLine' "Display tab and space with |
Plug 'kien/rainbow_parentheses.vim' " Rainbow pair () [] {} etc

Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'powerline/powerline', {'rtp': 'powerline/bindings/vim'}
Plug 'powerline/fonts'
Plug 'chase/focuspoint-vim'
Plug 'tomasr/molokai'
Plug 'drewtempelmeyer/palenight.vim'
Plug 'ayu-theme/ayu-vim'
Plug 'arcticicestudio/nord-vim', {'tag' : '*'}
Plug 'mhartington/oceanic-next'
Plug 'romainl/flattened'
Plug 'chriskempson/tomorrow-theme', { 'rtp': 'vim' }
Plug 'jaxbot/semantic-highlight.vim'
Plug 'mhinz/vim-startify'
Plug 'rubberduck203/aosp-vim'

Plug 'simrat39/inlay-hints.nvim'


" "----------------------------------------------------------------------- "
" "--- Actions"
" "----------------------------------------------------------------------- "
Plug 'tpope/vim-repeat'
Plug 'ntpeters/vim-better-whitespace'
Plug 'yonchu/accelerated-smooth-scroll'
Plug 'terryma/vim-smooth-scroll'
Plug 'tpope/vim-surround'
Plug 'tmhedberg/SimpylFold'
Plug 'terryma/vim-multiple-cursors'
" Plug 'dhruvasagar/vim-table-mode'
" Plug 'ervandew/supertab'
Plug 'MattesGroeger/vim-bookmarks'
Plug 'Valloric/ListToggle'
Plug 'danro/rename.vim'
Plug 'gcmt/wildfire.vim'
Plug 'greyblake/vim-preview'
Plug 'ludovicchabant/vim-gutentags'
Plug 'skywind3000/gutentags_plus'

" "----------------------------------------------------------------------- "
" "--- commenter"
" "----------------------------------------------------------------------- "
Plug 'scrooloose/nerdcommenter'
Plug 'tpope/vim-commentary'


" "----------------------------------------------------------------------- "
" "--- command line"
" "----------------------------------------------------------------------- "
Plug 'joonty/vim-do'
Plug 'osyo-manga/vim-over'
Plug 'Shougo/vimproc.vim', { 'do': 'make' }
Plug 'Shougo/vimshell.vim'
Plug 'skywind3000/asyncrun.vim'



" "----------------------------------------------------------------------- "
" "--- filetype support"
" "----------------------------------------------------------------------- "
Plug 'WolfgangMehner/bash-support'
Plug 'WolfgangMehner/c-support'
Plug 'WolfgangMehner/git-support'
Plug 'WolfgangMehner/lua-support'
Plug 'WolfgangMehner/vim-support'
Plug 'WolfgangMehner/latex-support'
Plug 'WolfgangMehner/perl-support'
Plug 'WolfgangMehner/awk-support'
" Plug 'WolfgangMehner/python-support'
Plug 'WolfgangMehner/matlab-support'
Plug 'WolfgangMehner/verilog-support'
Plug 'vim-python/python-syntax'

" Plug 'python-mode/python-mode'
" Plug 'isnowfy/python-vim-instant-markdown'
" Plug 'rkulla/pydiction'

Plug 'sheerun/vim-polyglot', { 'do':'./build'}
Plug 'mattn/emmet-vim'
" "----For js
Plug 'kchmck/vim-coffee-script'
Plug 'ternjs/tern_for_vim'
Plug 'pangloss/vim-javascript'
" "----For Python
Plug 'tell-k/vim-autopep8'
Plug 'davidhalter/jedi'
Plug 'davidhalter/jedi-vim'
Plug 'ivanov/vim-ipython'
Plug 'vim-syntastic/syntastic'
" Plug 'dense-analysis/ale', {'tag':'v2.6.0'}
Plug 'dense-analysis/ale', {'tag' : '*'}
Plug 'hail2u/vim-css3-syntax'
Plug 'digitaltoad/vim-jade'
Plug 'iloginow/vim-stylus'
Plug 'groenewege/vim-less'

" "----------------------------------------------------------------------- "
" "--- VCS control"
" "----------------------------------------------------------------------- "
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'
Plug 'junegunn/gv.vim'
Plug 'mattn/webapi-vim'
Plug 'mattn/gist-vim'


" "----------------------------------------------------------------------- "
" "--- Custom"
" "----------------------------------------------------------------------- "
Plug 'princeofdream/vim_plugins'


" "----------------------------------------------------------------------- "
" "--- data collection"
" "----------------------------------------------------------------------- "
Plug 'wakatime/vim-wakatime'

" "----------------------------------------------------------------------- "
" "--- "
" "----------------------------------------------------------------------- "
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'github/copilot.vim'


" =======================================================







" Initialize plugin system
call plug#end()
