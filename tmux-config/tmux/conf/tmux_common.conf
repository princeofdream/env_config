# ==========================
# ===  General settings  ===
# ==========================

set -g history-limit 20000
set -g buffer-limit 20
set -sg escape-time 0
set -g display-time 1500
set -g remain-on-exit off
set -g repeat-time 300
setw -g automatic-rename on
setw -g aggressive-resize on
## replace bash to /path/of/current/dir
# setw -g allow-rename on
## pass arrow keys <up> <down> <left> <right> to terminal
set -g xterm-keys on

# Set parent terminal title to reflect current window in tmux session 
set -g set-titles on
set -g set-titles-string "#I:#W"

# Start index of window/pane with 1, because we're humans, not computers
set -g base-index 1
setw -g pane-base-index 1

# Enable mouse support
set -g mouse off

# Change prefix key to C-a, easier to type, same to "screen"
unbind C-b
set -g prefix C-a


# ==================================================
# === Hide status bar on demand
# ==================================================
bind C-s if -F '#{s/off//:status}' 'set status off' 'set status on'

# ==================================================
# === toggle mouse
# ==================================================
bind m run "bash ~/.tmux/scripts/tmux_func.sh _toggle_mouse"

# ==================================================
# === Window monitoring for activity and silence ===
# ==================================================
bind M setw monitor-activity \; display-message 'Monitor window activity [#{?monitor-activity,ON,OFF}]'
# bind M if -F '#{monitor-silence}' \
#     'setw monitor-silence 0 ; display-message "Monitor window silence [OFF]"' \
#     'command-prompt -p "Monitor silence: interval (s)" "setw monitor-silence %%"'

# ==================================================
# === Renew environment
# ==================================================
set -g update-environment \
  "DISPLAY\
  SSH_ASKPASS\
  SSH_AUTH_SOCK\
  SSH_AGENT_PID\
  SSH_CONNECTION\
  SSH_TTY\
  WINDOWID\
  XAUTHORITY"

bind '$' run "~/.tmux/renew_env.sh"

# ==================================================
# === Detach from session
# ==================================================
bind d detach
bind D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "Session has only 1 client attached"'


# ==================================================
# === Activity bell and whistles
# ==================================================
set -g visual-activity on

# TODO: Does not work as well, check on newer versions
# set -g visual-silence on

# BUG: bell-action other ignored · Issue #1027 · tmux/tmux · GitHub - https://github.com/tmux/tmux/issues/1027
# set -g visual-bell on
# setw -g bell-action other


# ==================================================
# === Merge session with another one (e.g. move all windows)
# === If you use adhoc 1-window sessions, and you want to preserve session upon exit
# === but don't want to create a lot of small unnamed 1-window sessions around
# === move all windows from current session to main named one (dev, work, etc)
# ==================================================
bind C-u command-prompt -p "Session to merge with: " \
   "run-shell 'yes | head -n #{session_windows} | xargs -I {} -n 1 tmux movew -t %%'"

# ==================================================
# === use build bash
# ==================================================
if-shell -b '[ -f $HOME/Environment/env_rootfs/usr/bin/bash ]' \
	"set -g default-shell $HOME/Environment/env_rootfs/usr/bin/bash"
if-shell -b '[ -f $HOME/Environment/env_rootfs/usr/bin/bash ]' \
	"set -g default-command $HOME/Environment/env_rootfs/usr/bin/bash"





